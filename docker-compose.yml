version: "2"

services:
  dev:
    build: .
    volumes:
      - .:/code
    working_dir: /code
    ports:
      - "3000:3000"
    environment:
      - ACCOUNT_ID
      - AWS_ACCESS_KEY_ID
      - AWS_SECRET_ACCESS_KEY
      - REGION
      - AWS_KMS_KEY_ID
      - AWS_REGION
      - SERVICE_NAME
      - STAGE
      - KEBOOLA_STACK
      - KBC_URL
      - SESSION_HASH_PREFIX
      - SESSION_COOKIE_NAME
      - KBC_MANAGE_API_TOKEN
      - KBC_STORAGE_API_TOKEN
      - REDIRECT_URI_BASE
      - TW_APP_KEY
      - TW_APP_SECRET
    command: >
             sh -c '
             serverless dynamodb install && serverless offline start --host 0.0.0.0
             '
  tests:
    build: .
    working_dir: /code
    ports:
      - "3000:3000"
    environment:
      - ACCOUNT_ID
      - AWS_ACCESS_KEY_ID
      - AWS_SECRET_ACCESS_KEY
      - REGION
      - AWS_KMS_KEY_ID
      - AWS_REGION
      - SERVICE_NAME
      - STAGE
      - KEBOOLA_STACK
      - KBC_URL
      - SESSION_HASH_PREFIX
      - SESSION_COOKIE_NAME
      - KBC_MANAGE_API_TOKEN
      - KBC_STORAGE_API_TOKEN
      - REDIRECT_URI_BASE
      - TW_APP_KEY
      - TW_APP_SECRET
    command: ./tests/run.sh

  deploy-dev:
    build: .
    volumes:
      - .:/code
    working_dir: /code
    environment:
      - ACCOUNT_ID
      - AWS_ACCESS_KEY_ID
      - AWS_SECRET_ACCESS_KEY
      - REGION
      - AWS_KMS_KEY_ID
      - SERVICE_NAME
      - STAGE
      - KEBOOLA_STACK
      - KBC_URL
      - SESSION_HASH_PREFIX
      - SESSION_COOKIE_NAME
      - KBC_MANAGE_API_TOKEN
      - KBC_STORAGE_API_TOKEN
      - REDIRECT_URI_BASE
      - TW_APP_KEY
      - TW_APP_SECRET
    command: >
             sh -c '
             serverless deploy
             '

  lint:
    build:
      context: .
      dockerfile: Dockerfile
    command: >
             sh -c '
             ./node_modules/.bin/eslint .
             '